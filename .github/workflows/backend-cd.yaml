name: Backend Continuous Deployment

on:
  workflow_dispatch:
  pull_request:
    branches: [main]
    types: [closed]
    
jobs:
  lint:
    runs-on: ubuntu-latest
    steps:
      - name: Check out source repository
        uses: actions/checkout@v3
      - name: Set up Python environment
        uses: actions/setup-python@v4
        with:
          python-version: "3.8"
      - name: flake8 Lint
        uses: py-actions/flake8@v2
        with:
          ignore: "F401"
          max-line-length: "110"
          path: "starter/backend"

  test:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.8'
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          python -m pip install Flask
          pip install uWSGI
          pip install Flask-Cors
      - name: Test with pytest
        run: |
          pip install pytest pytest-cov
          pytest starter/backend/test_app.py --doctest-modules --junitxml=junit/test-results.xml --cov=com --cov-report=xml --cov-report=html
  
  build:
    needs: [lint, test]
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repo
        uses: actions/checkout@v3

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v2 
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY }} 
          aws-secret-access-key: ${{ secrets.AWS_SECRET_KEY }}
          aws-session-token: ${{secrets.AWS_SESSION_TOKEN}}
          aws-region: ${{ env.AWS_REGION }} 
      
      
      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v2

      - name: Build, tag, and push docker image to Amazon ECR
        env:
          REGISTRY: ${{ steps.login-ecr.outputs.registry }}
          REPOSITORY: backend
          IMAGE_TAG: latest
        run: |
          docker build -t $REGISTRY/$REPOSITORY:$IMAGE_TAG starter/backend
          docker push $REGISTRY/$REPOSITORY:$IMAGE_TAG
      
      - name: Create/update kubeconfig
        env:
          EKS_CLUSTER_NAME: dev_cluster
        run: aws eks update-kubeconfig --region ${{ env.AWS_REGION }} --name $EKS_CLUSTER_NAME
        
      - name: Deploy to EKS
        run:  |
          kubectl apply -f starter/backend/k8s/deployment.yaml
          kubectl apply -f starter/backend/k8s/service.yaml